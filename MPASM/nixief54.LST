MPASM  5.20                      NIXIEF54.ASM   4-14-2021  21:33:51         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;
                      00002 ;********************************************************************
                      00003         LIST    P = 16F54, n = 66
                      00004 ;
                      00005 ;                      Nixie Clock
                      00006 ;*********************************************************************
                      00007 ;
                      00008 ;                       PROGRAM DESCRIPTION
                      00009 ; 
                      00010 ; This program emulates a clock and generates output signals to display the time on
                      00011 ; four common-anode nixie tubes. the programs runs on a PIC16F54 MCU. (16C54 is deprecated)
                      00012 ; Adapted from CLOCK54.ASM contained within the Microchip Application Note AN590 
                      00013 ; herein reproduced and modified by Rony Ballouz
                      00014 ;
                      00015 ;                       Hardware Description
                      00016 ;
                      00017 ;  DISPLAYS
                      00018 ; Four IN-14 Nixie Neon Tubes are multiplexed. The cathodes are tied together while
                      00019 ; the anode pins broken out separately.  The time is displayed on four tubes
                      00020 ; with an optional center neon bulb ( 12:34 ).  The digits are output to the upper 4
                      00021 ; bits of Port B in binary-coded decimal (BCD) for interfacing the K155ID1 driver. The
                      00022 ; colon is controlled by RB0, while RB1-3 act as inputs for switches to set the time.
                      00023 ; The four common anodes are attached to the four Port A pins through level shifters.
                      00024 ; RA0 and RA2 for 10s place in hours and mins, RA1 RA3 for 1s place in hours and mins.  
                      00025 ;
                      00026 ;  SWITCHES
                      00027 ; Port B is connected to switches such that SWX connects RBX to VCC (X=1,2,3) 
                      00028 ; SW2 and SW3 allow the user to set the minutes and hours respectively, and SW1 sets the
                      00029 ; display to show seconds. 
                      00030 ;
                      00031 ; TODO: invert 'display' use cases, port a outputs -- done
                      00032 ;       fix hex outputs to port b -- done: removed routine for converting digits 
                      00033 ;                               now implemented by 4x left rotate during refresh
                      00034 ;       incorporate blanking -- done
                      00035 ;       add cathode poisoning prevention routine -- counter variable poison gets 
                      00036 ;               incremented every minute. if equal 20 then run poison prevention
                      00037 ;               by hijacking the 'cycle' execution with a loop that runs each
                      00038 ;               digit on each tube for 1 full second. after all 40 cathodes are 
                      00039 ;               outgassed then 'poison' gets reset. pressing any switch resets
                      00040 ;               'poison' and should end the outgassing routine if it is running.
                      00041 ;
                      00042 ;
                      00043 ;**************************   Header *************************
                      00044 ;
                      00045 ;
  000001FF            00046 PIC54   equ     H'01FF'
  000003FF            00047 PIC56   equ     H'03FF'
                      00048 ;
  00000000            00049 POINTER equ     H'00'
  00000001            00050 TMR0    equ     H'01'
  00000002            00051 PC      equ     H'02'
  00000003            00052 STATUS  equ     H'03'       ; F3 Reg is STATUS Reg.
  00000004            00053 FSR     equ     H'04'
                      00054 ;
  00000005            00055 PORT_A  equ     H'05'           ; Nixie Anode Control
  00000006            00056 PORT_B  equ     H'06'       ; Center Colon and BCD bits (Switches when inputs)
                      00057 ;
                      00058                                 ; STATUS REG. Bits
  00000000            00059 CARRY   equ     0               ; Carry Bit is Bit.0 of F3
  00000000            00060 C       equ     0
MPASM  5.20                      NIXIEF54.ASM   4-14-2021  21:33:51         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000001            00061 DCARRY  equ     1
  00000001            00062 DC      equ     1
  00000002            00063 Z_bit   equ     2               ; Bit 2 of F3 is Zero Bit
  00000002            00064 Z       equ     2
  00000003            00065 P_DOWN  equ     3
  00000003            00066 PD      equ     3
  00000004            00067 T_OUT   equ     4
  00000004            00068 TO      equ     4
  00000005            00069 PA0     equ     5               ;16C5X Status bits
  00000006            00070 PA1     equ     6               ;16C5X Status bits
  00000007            00071 PA2     equ     7               ;16C5X Status bits
                      00072 ;
  00000001            00073 COLON   equ             H'01'
  00000000            00074 BLANK   equ             H'00'
                      00075 ;
  0000000C            00076 MAXNTHS equ             D'12'           ; constants for timer variable count up
  000000C4            00077 MAXSECS equ             D'196'          ;  variables roll over in HEX at time roll over, see variable
  000000C4            00078 MAXMINS equ             D'196'          ;  explanation
  000000F4            00079 MAXHRS  equ             D'244'
  000000F3            00080 MINHRS  equ             D'243'
  00000009            00081 ADJMIN  equ             D'9'            ; number of nths that need to be subtracted each minute
  00000022            00082 ADJHR   equ             D'34'           ; nths added each hour for accurate time
  00000003            00083 ADJDAY  equ             D'3'            ; nths subtracted each 1/2 day rollover
                      00084 ;
  000000FE            00085 DISP1   equ             B'11111110'
  000000FD            00086 DISP2   equ             B'11111101'     ; Mapping of Active Display Selection (PORT_A)
  000000FB            00087 DISP3   equ             B'11111011'
  000000F7            00088 DISP4   equ             B'11110111'
  00000000            00089 DISPOFF equ             H'00'           ;inverted cause now port A controls anodes instead of cathodes
  0000000E            00090 SWITCH  equ             B'00001110'     ; Activate RB1-3 for switch inputs     
                      00091 ;
                      00092 ;  Flag bit assignments
  00000000            00093 SEC     equ             H'0'            ; update time display values for sec, min, or hours
  00000001            00094 MIN     equ             H'1'
  00000002            00095 HRS     equ             H'2'
  00000003            00096 CHG     equ             H'3'            ; a change has occurred on a switch or to a potentially displaye
                            d value                          
  00000004            00097 SW1     equ             H'4'            ; Flag bit assignments - switches that are on = 1
  00000005            00098 SW2     equ             H'5'            ;  SW1 is Seconds-minutes, SW2-hours, SW3-mode
  00000006            00099 SW3     equ             H'6'
  00000007            00100 SW_ON   equ             H'7'            ; a switch has been pressed
                      00101 ;
                      00102 ;   VARIABLES
  00000008            00103 keys    equ             H'08'           ; variable location - which keys are pressed? bit0/sw1... 
  00000009            00104 flags   equ             H'09'           ; bit flags; 0-SEC, 1-MIN, 2-HRS, 3-CHG, 4-SW1, 5-SW2, 6-SW3
                      00105 ;       equ             H'0A'           ; Not Used
  0000000B            00106 display equ             H'0B'           ; variable location - which digit to update 
  0000000C            00107 digit1  equ             H'0C'           ; Rightmost display value
  0000000D            00108 digit2  equ             H'0D'           ; Second display from right
  0000000E            00109 digit3  equ             H'0E'           ; Third    "       "    "
  0000000F            00110 digit4  equ             H'0F'           ; Fourth (and Leftmost)
                      00111 ;
                      00112 ;       timer variables start at a number that allows rollover in sync with time rollover,
                      00113 ;        i.e. seconds starts at decimal 196 so that sixty 1-second increments causes 0.
  00000010            00114 sec_nth equ             H'10'           ; seconds, fractional place
  00000011            00115 seconds equ             H'11'           ; seconds
  00000012            00116 minutes equ             H'12'           ; minutes
  00000013            00117 hours   equ             H'13'           ; hours
  00000014            00118 var     equ             H'14'           ; variable for misc math computations
  00000015            00119 count   equ             H'15'           ; loop counter variable
MPASM  5.20                      NIXIEF54.ASM   4-14-2021  21:33:51         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000016            00120 count2  equ             H'16'           ; 2nd loop counter for nested loops
  00000017            00121 poison  equ             H'17'           ; poisoning minute counter, bit 6 and 7 are status and ready bit
  00000018            00122 ppcount equ             H'18'           ; loop variable for poison prevention routine 
                      00123 ;
                      00124 ;********************************************************************************
                      00125 ;
                      00126 ;  Initialize Ports all outputs, blank display
                      00127 ;
                      00128 
0FFF   0001           00129         __config        1       ; set oscillator mode to XT, Watchdog Timer is off
0000                  00130 START   
0000   0C03           00131                 movlw   H'03'           ; set option register, transition on CLKOUT,
0001   0002           00132                 option                  ; Prescale TMR0, 1:16 (contents of the W register
                      00133                                         ; will be transferred to the Option register)
                      00134 ;
0002   0C00           00135                 movlw   0
0003   0005           00136                 tris    PORT_A          ; Set Port A common anode pins to outputs
0004   0C0E           00137                 movlw   SWITCH          ; set PB1-PB3 as inputs and rest of Port B as output
0005   0006           00138                 tris    PORT_B
0006   0C00           00139                 movlw   BLANK
0007   0026           00140                 movwf   PORT_B          ; Blank the display
0008   04C3           00141                 bcf     STATUS,PA1      ; set memory to page 0
0009   04A3           00142                 bcf     STATUS,PA0
                      00143 ;
                      00144 ;  initialize variables
000A   0C01           00145                 movlw   H'01'
000B   0021           00146                 movwf   TMR0            ; set TMR0 above zero so initial wait period occurs
000C   0C01           00147                 movlw   H'01'           ; inverted from 'FE' cause we Common anode now
000D   002B           00148                 movwf   display         ; initializes 'display' selected to first display.
000E   0C00           00149                 movlw   BLANK           ; put all displays to blank, no visible segments
000F   002C           00150                 movwf   digit1
0010   002D           00151                 movwf   digit2
0011   002E           00152                 movwf   digit3
0012   002F           00153                 movwf   digit4
0013   0C0C           00154                 movlw   MAXNTHS         ; set timer variables to initial values
0014   0030           00155                 movwf   sec_nth
0015   0CC4           00156                 movlw   MAXSECS
0016   0031           00157                 movwf   seconds
0017   0CC4           00158                 movlw   MAXMINS
0018   0032           00159                 movwf   minutes
0019   0CFF           00160                 movlw   H'FF'           ; hours start at 12 which is max at FF
001A   0033           00161                 movwf   hours
001B   0C00           00162                 movlw   H'00'
001C   0029           00163                 movwf   flags
001D   0037           00164                 movwf   poison
                      00165 ;
                      00166 ;
                      00167 ;
001E                  00168 MAIN 
                      00169 ;
001E                  00170 TMR0_FILL
001E   0201           00171                 movf    TMR0,0
001F   0743           00172                 btfss   STATUS,Z        ; skip if TMR0 has not rolled over
                      00173                                         ; TMR0 is left free running to not lose clock cycles on writes
0020   0A1E           00174                 goto    TMR0_FILL       
                      00175                                         ;
0021   03F0           00176                 incfsz  sec_nth,1       ; add 1 to nths, n X nths = 1 sec, n is based on prescaler
0022   0A55           00177                 goto    TIME_DONE
0023   0C0C           00178                 movlw   MAXNTHS
0024   0030           00179                 movwf   sec_nth         ; restore sec_nths variable for next round
MPASM  5.20                      NIXIEF54.ASM   4-14-2021  21:33:51         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00180 ;
0025                  00181 CHECK_SW
0025   07E9           00182                 btfss   flags,SW_ON ; if no switches pressed, adjust time naturally
0026   0A3C           00183                 goto    SET_TIME
0027   0689           00184                 btfsc   flags,SW1
0028   0A3C           00185                 goto    SET_TIME    ; if seconds display is pressed, do not change time
0029   0CC4           00186                 movlw   MAXSECS
002A   0031           00187                 movwf   seconds     ; reset seconds to zero when setting clock
002B   0C7F           00188                 movlw   H'7F'
002C   0030           00189                 movwf   sec_nth     ; advance second timer 1/2 second to speed time setting
002D   07A9           00190                 btfss   flags,SW2
002E   0A35           00191                 goto    HOURSET     ; minutes do not need changing, check hours
002F   0CAF           00192                 movlw   H'AF'
0030   0030           00193                 movwf   sec_nth     ; advances timer faster when setting minutes
0031   03F2           00194                 incfsz  minutes,1
0032   0A35           00195                 goto    HOURSET
0033   0CC4           00196                 movlw   MAXMINS
0034   0032           00197                 movwf   minutes
                      00198 ;
0035                  00199 HOURSET 
0035   06A9           00200                 btfsc   flags,SW2
0036   0A7C           00201                 goto    CHECK_TIME      ; not changing hours
0037   03F3           00202                 incfsz  hours,1
0038   0A7C           00203                 goto    CHECK_TIME
0039   0CF4           00204                 movlw   MAXHRS
003A   0033           00205                 movwf   hours
003B   0A7C           00206                 goto    CHECK_TIME      ; since no timing is required, go to display changes
                      00207 ;
003C                  00208 SET_TIME
                      00209 ;this code only runs once a second and updates the stored time
003C   0509           00210                 bsf     flags,SEC       ; seconds, if displayed, should be updated. 
003D   0569           00211                 bsf     flags,CHG       ; a flag change was made.
003E   03F1           00212                 incfsz  seconds,1       ;  add 1 to seconds
003F   0A55           00213                 goto    TIME_DONE       ; if seconds did not rollover, short circuit
0040   0CC4           00214                 movlw   MAXSECS
0041   0031           00215                 movwf   seconds         ; restore seconds variable for next round
                      00216 ;
0042   0529           00217                 bsf     flags,MIN       ; minutes, if displayed, should be updated
0043   0569           00218                 bsf     flags,CHG
0044   0C09           00219                 movlw   ADJMIN
0045   00B0           00220                 subwf   sec_nth,1       ; subtraction needed adjustment for each minute
0046   02B7           00221                 incf    poison,1        ; add 1 to poison counter
0047   03F2           00222                 incfsz  minutes,1       ; add 1 to minutes
0048   0A55           00223                 goto    TIME_DONE
0049   0CC4           00224                 movlw   MAXMINS
004A   0032           00225                 movwf   minutes         ; restore minutes variable for next hour countdown
                      00226 ;
004B   0549           00227                 bsf     flags,HRS
004C   0569           00228                 bsf     flags,CHG
004D   0C22           00229                 movlw   ADJHR
004E   01F0           00230                 addwf   sec_nth,1       ; add needed adjustment for each hour
004F   03F3           00231                 incfsz  hours,1         ; add 1 to hours
0050   0A55           00232                 goto    TIME_DONE
0051   0CF4           00233                 movlw   MAXHRS
0052   0033           00234                 movwf   hours           ; restore hours variable for next round
0053   0C03           00235                 movlw   ADJDAY
0054   00B0           00236                 subwf   sec_nth,1       ; subtraction adjustment for each 1/2 day rollover
                      00237 ;
0055                  00238 TIME_DONE
0055   0769           00239                 btfss   flags,CHG       ; if any change in stored clock time, 
MPASM  5.20                      NIXIEF54.ASM   4-14-2021  21:33:51         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0056   0A9A           00240                 goto    CYCLE           ;  then postpone cycling digits until display vars are set in ne
                            xt few subs
                      00241 ;
0057                  00242 CHECK_POISON
0057   0C14           00243                 movlw   D'20'           ;20 min(/4) of on-time. 1/4 factor due to muxing
0058   0097           00244                 subwf   poison, 0
0059   0703           00245                 btfss   STATUS, C       ;if carry is zero, the result is negative
005A   0A72           00246                 goto    CHECK_SECONDS   ;so it is not time to run the poison prevention routine
                      00247 ;
005B   05D7           00248                 bsf     poison, 6       ;this sub runs every second, so inidicate a second has passed
                      00249 ;
005C   07F7           00250                 btfss   poison, 7       ;if poison prevention is not already running
005D   0A69           00251                 goto    INITPOISON      ; initialize the digits
                      00252 
                      00253                 ;poison loop logic here: cycle digits, clear 'poison' and goto check secs if done outgas
                            sing
                      00254                 ; on first run, a '0' has already been displayed at the hr10s digit for 1 sec, and 'disp
                            lay' is set on digit3.
005E   02A0           00255                 incf    POINTER,1       ; increment cathode for previously displayed tube
005F   00E4           00256                 decf    FSR,1           ; move up to next tube
                      00257 
0060   0C0B           00258                 movlw   display         ; check cycle for wraparound 
0061   0184           00259                 xorwf   FSR,0           ; set status bits for FSR='digit4'-4='display'
0062   0C04           00260                 movlw   D'4'            ; prepare w to bump FSR back
0063   0643           00261                 btfsc   STATUS,Z        ; if FSR!='display' skip bumping
0064   01E4           00262                 addwf   FSR,1           ;
                      00263 
0065   02F8           00264                 decfsz  ppcount,1       
0066   0A98           00265                 goto    CLEAR_FLAGS
                      00266 
0067   0077           00267                 clrf    poison          ;loop has ended, reset the poison timer
0068   0A72           00268                 goto    CHECK_SECONDS   ;ensure that clock resumes normal display immediately
                      00269 ;
                      00270 
0069                  00271 INITPOISON
0069   05F7           00272                 bsf     poison, 7       
006A   0C0F           00273                 movlw   digit4
006B   0024           00274                 movwf   FSR
006C   0060           00275                 clrf    POINTER
006D   0C28           00276                 movlw   D'40'
006E   0038           00277                 movwf   ppcount
006F   006B           00278                 clrf    display
0070   02AB           00279                 incf    display,1       ; POINTER=digit4 and display=0001 syncs the poison prevention lo
                            gic loop 
0071   0A98           00280                 goto    CLEAR_FLAGS     ; with the update loop
                      00281 ;
0072                  00282 CHECK_SECONDS
0072   0789           00283                 btfss   flags,SW1       ;skip this sub if not displaying secs
0073   0A7C           00284                 goto    CHECK_TIME
0074   0C00           00285                 movlw   H'00'
0075   002D           00286                 movwf   digit2          ; 3rd digit variable used to store temp hex value for hours disp
                            lay
0076   002E           00287                 movwf   digit3
0077   002F           00288                 movwf   digit4
0078   0CC4           00289                 movlw   MAXSECS
0079   0091           00290                 subwf   seconds,0
007A   002C           00291                 movwf   digit1          ; 1st digit variable temporarily holds hex value for seconds dis
                            play
007B   0A85           00292                 goto    SPLIT_HEX
                      00293 ;
MPASM  5.20                      NIXIEF54.ASM   4-14-2021  21:33:51         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007C                  00294 CHECK_TIME
007C   0C00           00295                 movlw   H'00'
007D   002F           00296                 movwf   digit4          ; zero out tens places in case there is no tens increment
007E   002D           00297                 movwf   digit2
007F   0CF3           00298                 movlw   MINHRS
0080   0093           00299                 subwf   hours,0
0081   002E           00300                 movwf   digit3          ; 'digit3' temporarily holds hex value for hours
0082   0CC4           00301                 movlw   MAXMINS
0083   0092           00302                 subwf   minutes,0
0084   002C           00303                 movwf   digit1          ; 'digit1' temporarily holds hex value for minutes
                      00304 ;
                      00305 ;
                      00306 ;
0085                  00307 SPLIT_HEX       ;  this loop puts min1s->digit1, min10s->digit2, hr1s->digit3, hr10s->digit4
                      00308 ;
0085   0C02           00309                 movlw   H'02'
0086   0035           00310                 movwf   count           ; loop to convert each number - seconds - or minutes and hours
                      00311                                         ;1st time through, FSR = digit1, 2nd time FSR = digit3
0087   0C0C           00312                 movlw   digit1          ; 
0088   0024           00313                 movwf   FSR             ; address of digit1 into File Select Register enables POINTER
0089   0A8C           00314                 goto    LOOP            ; this loop is used to modify the minutes/seconds place
                      00315 ;
008A                  00316 LOOP2   
008A   0C0E           00317                 movlw   digit3
008B   0024           00318                 movwf   FSR     ; this loop is used to modify the hours place
                      00319 ;
008C                  00320 LOOP
008C   0C0A           00321                 movlw   D'10'
008D   00A0           00322                 subwf   POINTER,1       ; find out how many tens in number,
008E   0603           00323                 btfsc   STATUS,C        ; was a borrow needed?
008F   0A92           00324                 goto    INCREMENT_10S   ;  if not, add 1 to tens position
0090   01E0           00325                 addwf   POINTER,1       ;  if so, do not increment tens place, add ten back on to get 1s
0091   0A96           00326                 goto    NEXT_DIGIT
                      00327 ;
0092                  00328 INCREMENT_10S
0092   02A4           00329                 incf    FSR,1           ; bump address pointed to from 1s position to 10s
0093   02A0           00330                 incf    POINTER,1       ; add 1 to 10s position as determined by previous subtract
0094   00E4           00331                 decf    FSR,1           ; put POINTER value back to 1s place for next subtraction
0095   0A8C           00332                 goto    LOOP            ; go back and keep subtracting until finished
                      00333 ;
0096                  00334 NEXT_DIGIT
0096   02F5           00335                 decfsz  count,1
0097   0A8A           00336                 goto    LOOP2
                      00337 
0098                  00338 CLEAR_FLAGS
0098   0CF0           00339                 movlw   H'F0'
0099   0169           00340                 andwf   flags,1      ; clear the lower 4 flag bits to show update status
                      00341 ;
                      00342 ;****************************************************************************************
009A                  00343 CYCLE
                      00344 ;reads the switches every refresh (4ms), handles muxing and displaying digits
009A   0C0F           00345                 movlw   H'0F'
009B   0169           00346                 andwf   flags,1         ; reset switch flags to zero
009C   0206           00347                 movf    PORT_B,0        ; read switches into var register
009D   0034           00348                 movwf   var
009E                  00349 SWITCH1
009E   0734           00350                 btfss   var,1           ;check if sw1 pressed and so on for sw2 and sw3
009F   0AA4           00351                 goto    SWITCH2
00A0   0569           00352                 bsf     flags,CHG
00A1   0589           00353                 bsf     flags,SW1
MPASM  5.20                      NIXIEF54.ASM   4-14-2021  21:33:51         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A2   05E9           00354                 bsf     flags,SW_ON
00A3   0077           00355                 clrf    poison
                      00356 ;
00A4                  00357 SWITCH2 
00A4   0754           00358                 btfss   var,2
00A5   0AAA           00359                 goto    SWITCH3
00A6   0569           00360                 bsf     flags,CHG
00A7   05A9           00361                 bsf     flags,SW2
00A8   05E9           00362                 bsf     flags,SW_ON
00A9   0077           00363                 clrf    poison
                      00364 ;
00AA                  00365 SWITCH3 
00AA   0774           00366                 btfss   var,3
00AB   0AB0           00367                 goto    POISONCHECK
00AC   0569           00368                 bsf     flags,CHG
00AD   05C9           00369                 bsf     flags,SW3
00AE   05E9           00370                 bsf     flags,SW_ON
00AF   0077           00371                 clrf    poison
                      00372 ;
00B0                  00373 POISONCHECK
00B0   07F7           00374                 btfss   poison,7        ;if poison prev is not running then cycle as normal
00B1   0AB5           00375                 goto    BLANKING
00B2   07D7           00376                 btfss   poison,6        ;if  a second has not passed
00B3   0A1E           00377                 goto    MAIN            ;skip the rest of this
00B4   04D7           00378                 bcf     poison,6        ;reset once-a-second update flag
                      00379 
00B5                  00380 BLANKING
                      00381 ; anode blanking busywait assuming 1 microsec per instruction 
00B5   0C00           00382                 movlw   BLANK
00B6   0025           00383                 movwf   PORT_A
00B7   0C96           00384                 movlw   D'150'
00B8   0035           00385                 movwf   count
00B9                  00386 BLOOP
00B9   02F5           00387                 decfsz  count,1
00BA   0AB9           00388                 goto    BLOOP
                      00389 
00BB                  00390 UPDATE
                      00391 ;determine which display needs updating and cycle it on, 'digitx' contains the display bits
00BB   060B           00392                 btfsc   display,0  ; if 1st display, get 1st digit value into w
00BC   020F           00393                 movf    digit4,0
00BD   062B           00394                 btfsc   display,1  ; if 2nd display, get 2nd digit ''
00BE   020E           00395                 movf    digit3,0
00BF   064B           00396                 btfsc   display,2  ; if 3rd display, get 3rd digit ''
00C0   020D           00397                 movf    digit2,0
00C1   066B           00398                 btfsc   display,3  ; if 4th display, get 4th digit ''
00C2   020C           00399                 movf    digit1,0
                      00400 ;rotate digit left four times before display
00C3   0034           00401                 movwf   var
00C4   0374           00402                 rlf     var, 1
00C5   0374           00403                 rlf     var, 1
00C6   0374           00404                 rlf     var, 1
00C7   0354           00405                 rlf     var, 0
00C8   0026           00406                 movwf   PORT_B     ; put the number out to display
                      00407 
                      00408 
00C9   06F0           00409                 btfsc   sec_nth,7  ; sets colon decimal on %50 duty using highest bit
00CA   0506           00410                 bsf     PORT_B,0   ; nice because we don't yet know if colon logic is p or n
                      00411 
                      00412 
00CB   020B           00413                 movf    display,0  ; get anode needing cycle on
MPASM  5.20                      NIXIEF54.ASM   4-14-2021  21:33:51         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CC   0025           00414                 movwf   PORT_A     ; enables anode display
                      00415 
00CD   036B           00416                 rlf     display,1  ; rotate display "on" bit to next position
00CE   068B           00417                 btfsc   display,4  ; skip if cycle complete not complete
00CF   052B           00418                 bsf     display,1  ; if complete cycle, set display back to 1st (bit 0 set)
00D0   048B           00419                 bcf     display,4  ; clear bit 4 anyway
00D1   0A1E           00420                 goto    MAIN
                      00421 ;
                      00422 
01FF                  00423         org     PIC54
01FF   0A00           00424         goto    START
                      00425 ;
                      00426     END
MPASM  5.20                      NIXIEF54.ASM   4-14-2021  21:33:51         PAGE  9


SYMBOL TABLE
  LABEL                             VALUE 

ADJDAY                            00000003
ADJHR                             00000022
ADJMIN                            00000009
BLANK                             00000000
BLANKING                          000000B5
BLOOP                             000000B9
C                                 00000000
CARRY                             00000000
CHECK_POISON                      00000057
CHECK_SECONDS                     00000072
CHECK_SW                          00000025
CHECK_TIME                        0000007C
CHG                               00000003
CLEAR_FLAGS                       00000098
COLON                             00000001
CYCLE                             0000009A
DC                                00000001
DCARRY                            00000001
DISP1                             000000FE
DISP2                             000000FD
DISP3                             000000FB
DISP4                             000000F7
DISPOFF                           00000000
FSR                               00000004
HOURSET                           00000035
HRS                               00000002
INCREMENT_10S                     00000092
INITPOISON                        00000069
LOOP                              0000008C
LOOP2                             0000008A
MAIN                              0000001E
MAXHRS                            000000F4
MAXMINS                           000000C4
MAXNTHS                           0000000C
MAXSECS                           000000C4
MIN                               00000001
MINHRS                            000000F3
NEXT_DIGIT                        00000096
PA0                               00000005
PA1                               00000006
PA2                               00000007
PC                                00000002
PD                                00000003
PIC54                             000001FF
PIC56                             000003FF
POINTER                           00000000
POISONCHECK                       000000B0
PORT_A                            00000005
PORT_B                            00000006
P_DOWN                            00000003
SEC                               00000000
SET_TIME                          0000003C
SPLIT_HEX                         00000085
START                             00000000
STATUS                            00000003
SW1                               00000004
SW2                               00000005
SW3                               00000006
SWITCH                            0000000E
SWITCH1                           0000009E
MPASM  5.20                      NIXIEF54.ASM   4-14-2021  21:33:51         PAGE 10


SYMBOL TABLE
  LABEL                             VALUE 

SWITCH2                           000000A4
SWITCH3                           000000AA
SW_ON                             00000007
TIME_DONE                         00000055
TMR0                              00000001
TMR0_FILL                         0000001E
TO                                00000004
T_OUT                             00000004
UPDATE                            000000BB
Z                                 00000002
Z_bit                             00000002
__16F54                           00000001
count                             00000015
count2                            00000016
digit1                            0000000C
digit2                            0000000D
digit3                            0000000E
digit4                            0000000F
display                           0000000B
flags                             00000009
hours                             00000013
keys                              00000008
minutes                           00000012
poison                            00000017
ppcount                           00000018
sec_nth                           00000010
seconds                           00000011
var                               00000014


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XX-------------- ---------------- ----------------
01C0 : ---------------- ---------------- ---------------- ---------------X
0FC0 : ---------------- ---------------- ---------------- ---------------X

All other memory blocks unused.

Program Memory Words Used:   211
Program Memory Words Free:   301


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

